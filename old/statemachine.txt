fetch:
  ir <= ram(pc++)
  state <= decode

interrupt:
  ir <= "write @RSP++ PC, PC <= IV"
  state <= decode
  
decode:
  if op == (load|store) and top != 0x0000 and conditional == 1:
  	state <= exec_nop
  else:
  	state <= (exec_load / exec_store / exec_math)

exec_load:
  (top|next|pc|ir) <= ram(dsp|rsp|pc|top)
  if consume: (dsp|rsp) --  //  pc ++

exec_store:
  ram(dsp|rsp|pc|top) <= (top|next|pc|xx)
  if consume: (dsp|rsp|pc) ++

exec_calc:
  top <= alu_result(alu_op,swap_bytes,top,next)
  
exec_*:
  if first:
    first <= 0
    state <= decode
  else if irq:
  	first <= 1
  	state <= interrupt
  else:
  	first <= 1
  	state <= fetch